---
############################################################################
#
#   Ansible Playbook to restart the IVA application
#
#   Tested on 04 Dec 2020
#
############################################################################
- name: IBM Video Analytics system
  hosts: all
  gather_facts: no
  tasks:
  - name: "Setting ansible_become_password = ansible_password by default"
    set_fact:
      ansible_become_password: "{{ ansible_password }}"
    when: ansible_become_password is not defined
    tags: always

- name: IBM Video Analytics SSE Stop
  hosts:
  - sse
  - allinone
  gather_facts: no
  vars:
    target_dir: "{{ watvid_dir }}/watvid/sse"
  tags: sse
  tasks:
  - block:
    - name: "Stop the SSE"
      command:
        chdir: "{{ target_dir }}"  
        cmd: ./stop.sh
      ignore_errors: yes
    become: yes

- name: Docker Restart
  hosts: all
  gather_facts: no
  tags: docker
  tasks:
  - name: "Re-starting docker service"
    service:
      state: restarted
      name: docker
      enabled: yes
    become: yes

  - name: "Testing docker"
    command: docker run --rm hello-world
    register: docker_check
    changed_when: false
    become: yes
  - debug:
      var: docker_check
      verbosity: 1
  - name: "Checking docker hello-world"
    debug:
      msg: "ERROR: Docker hello-world failed, {{ docker_package }} is not properly installed"
    changed_when: true
    when: docker_check.rc != 0 or docker_check.stdout is not search("Hello from Docker!")

- name: IBM Video Analytics DLE Restart
  hosts:
  - dle
  - allinone
  gather_facts: no
  vars:
    target_dir: "{{ watvid_dir }}/watvid/dle"
  tasks:
  - block:
    - name: "Restart the DLE"
      command:
        chdir: "{{ target_dir }}"  
        cmd: ./restart.sh
      register: start_output
    - debug:
        var: start_output.stdout_lines
        verbosity: 1
    - name: "Sleep for 10 seconds before running check"
      wait_for:
        timeout: 10
    - name: "Run check-svc.sh"
      command:
        chdir: "{{ target_dir }}/bin"  
        cmd: ./check-svc.sh
      register: check_svc
    - debug:
        var: check_svc.stdout_lines
        verbosity: 1
    tags: dle
  become: yes

- name: IBM Video Analytics MILS Restart
  hosts:
  - mils
  - allinone
  gather_facts: no
  vars:
    target_dir: "{{ watvid_dir }}/watvid/mils/scripts"
  tasks:
  - block:
    - name: "Stop the MILS"
      command:
        chdir: "{{ target_dir }}"  
        cmd: ./stop.sh
      ignore_errors: yes
    - name: "Start the MILS"
      command:
        chdir: "{{ target_dir }}"  
        cmd: ./start.sh
      register: start_output
    - debug:
        var: start_output.stdout_lines
        verbosity: 1
    tags: mils
    become: yes
   
- name: IBM Video Analytics SSE Start
  hosts:
  - sse
  - allinone
  gather_facts: no
  vars:
    target_dir: "{{ watvid_dir }}/watvid/sse"
  tasks:
  - block:
    - name: "Start the SSE"
      command:
        chdir: "{{ target_dir }}"  
        cmd: ./start.sh
    - name: "Sleep for 5 seconds before running check"
      wait_for:
        timeout: 5
    - name: "Run-check"
      command:
        chdir: "{{ target_dir }}"  
        cmd: ./run-check.sh
      register: check_svc
    - debug:
        var: check_svc.stdout_lines
        verbosity: 1
    tags: sse
    become: yes
